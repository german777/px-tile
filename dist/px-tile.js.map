{"version":3,"sources":["px-tile.es6.js"],"names":["Polymer","is","properties","hoverable","type","Boolean","value","observer","_hovered","title","String","subtitle","description","overlayDescription","titleActionButton","Object","_hover","_hoverableChanged","$","overlay","classList","add","remove","attached","listen","detached","unlisten","_getClass","hovered"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,SAFE,CAINC,WAAY,CACV;;;;SAKAC,UAAW,CACTC,KAAMC,OADG,CAETC,MAAO,KAFE,CAGTC,SAAU,mBAHD,CAND,CAWV;;SAGAC,SAAU,CACRJ,KAAMC,OADE,CAERC,MAAO,KAFC,CAdA,CAkBV;;SAGAG,MAAO,CACLL,KAAMM,MADD,CAELJ,MAAO,EAFF,CArBG,CAyBV;;SAGAK,SAAU,CACRP,KAAMM,MADE,CAERJ,MAAO,EAFC,CA5BA,CAgCT;;;;;SAMDM,YAAa,CACXR,KAAMM,MADK,CAEXJ,MAAO,EAFI,CAtCH,CA0CV;;;;SAKAO,mBAAoB,CAClBT,KAAMM,MADY,CAElBJ,MAAO,EAFW,CA/CV,CAmDV;;;;;;;;;;;;;;;;;;;;;;SAuBAQ,kBAAmB,CACjBV,KAAMW,MADW,CAEjBT,MAAO,EAFU,CA1ET,CAJN,CAmFN;;OAGAU,MAtFM,kBAsFG,CACP,GAAG,KAAKb,SAAR,CAAmB,CACjB,KAAKK,QAAL,CAAgB,CAAC,KAAKA,QACvB,CACF,CA1FK,CA2FN;;OAGAS,iBA9FM,6BA8Fc,CAClB,KAAKC,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,gBAA7B,EACA,GAAG,KAAKlB,SAAR,CAAmB,CACjB,KAAKe,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBE,MAAzB,CAAgC,gBAAhC,CACD,CACF,CAnGK,CAoGN;;OAGAC,QAvGM,oBAuGK,CACT,KAAKC,MAAL,CAAY,KAAKN,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,EACA,KAAKK,MAAL,CAAY,KAAKN,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,CACD,CA1GK,CA2GN;;OAGAM,QA9GM,oBA8GK,CACT,KAAKC,QAAL,CAAc,KAAKR,CAAL,CAAOC,OAArB,CAA8B,YAA9B,EACA,KAAKO,QAAL,CAAc,KAAKR,CAAL,CAAOC,OAArB,CAA8B,YAA9B,CACD,CAjHK,CAkHN;;OAGAQ,SArHM,oBAqHIC,OArHJ,CAqHa,CACjB,MAAOA,SAAU,SAAV,CAAsB,EAC9B,CACD;;;OAxHM,CAAR,CA6HD,CA9HD","file":"px-tile.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-tile',\n\n    properties: {\n      /**\n       * If true, hovering over the card will cause an overlay to appear\n       * with more detailed information, including the description\n       * and an optional slot for showing a footer at the bottom.\n       */\n      hoverable: {\n        type: Boolean,\n        value: false,\n        observer: '_hoverableChanged'\n      },\n      /**\n       * Whether the tile is currently being hovered.\n       */\n      _hovered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Main text label for the tile.\n       */\n      title: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Subtitle text for the tile.\n       */\n      subtitle: {\n        type: String,\n        value: ''\n      },\n       /**\n        * Description information to be displayed underneath tile and subtitle.\n        * Default : Only the first ~3 lines of text will be displayed, after which it will be truncated.\n        * You can customize this using by adjusting `--px-tile-desc-text-height` SASS variable. (e.g. 1 line = 1 rem,\n        * to set to 5 lines truncated, set --px-tile-desc-text-height : 5rem)\n       */\n      description: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Description information to be displayed in the overlay of a hoverable card.\n       * It has more space to display text content and can be adjusted along with\n       * total height of the tile.\n       */\n      overlayDescription: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Single action button to display on the title section right side. \n       * \n       * See https://www.predix-ui.com/#/css/visual/buttons/px-buttons-design \n       * \n       * `style` is an additionally property from px-tile (E.g. background-color: red; margin-left: 4px; others..) \n       * \n       * Examples:\n       * \n       * Default button with icon and color ` {\"key\":\"101\",\"val\":\"Favorite\",\"icon\":\"px-nav:favorite\", \"color\": \"orange\"} ` \n       * \n       * Default button and icon ` {\"key\":\"101\",\"val\":\"Favorite\",\"icon\":\"px-nav:favorite\"} ` \n       * \n       * Small button and icon ` {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"icon\":\"px-nav:favorite\"} ` \n       * \n       * Bare small button with icon and text `  {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"type\":\"btn--bare\",\"icon\":\"px-nav:favorite\"} `  \n       * \n       * Bare small button with just text  ` {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"type\":\"btn--bare\"} `   \n       * \n       * Bare small button with just icon and some margin on the right `  {\"key\":\"101\",\"size\":\"btn--small\",\"type\":\"btn--icon\",\"icon\":\"px-nav:favorite\", \"style\": \"margin-right: 5px;\"} `\n       * \n       * Bare small button with just icon `  {\"key\":\"101\",\"size\":\"btn--small\",\"type\":\"btn--icon\",\"icon\":\"px-nav:favorite\"} ` \n       */\n      titleActionButton: {\n        type: Object,\n        value: {}\n      }\n    },\n    /**\n     * Method used internally for flipping the hovered status of a tile.\n     */\n    _hover() {\n      if(this.hoverable) {\n        this._hovered = !this._hovered;\n      }\n    },\n    /**\n     * On change callback to remove overlay\n     */\n    _hoverableChanged() {\n      this.$.overlay.classList.add('overlay-remove');\n      if(this.hoverable) {\n        this.$.overlay.classList.remove('overlay-remove');\n      }\n    },\n    /**\n     * Attach event listeners for hoverable tiles.\n     */\n    attached() {\n      this.listen(this.$.overlay, 'mouseenter', '_hover');\n      this.listen(this.$.overlay, 'mouseleave', '_hover');\n    },\n    /**\n     * Detach event listeners for hoverable tiles.\n     */\n    detached() {\n      this.unlisten(this.$.overlay, 'mouseenter');\n      this.unlisten(this.$.overlay, 'mouseleave');\n    },\n    /**\n     * Returns class to control overlay for hoverable tiles.\n     */\n    _getClass(hovered) {\n      return hovered ? 'hovered' : '';\n    }\n    /**\n     * Fires px-title-on-action-clicked with selection detail. E.g. {key: \"1\", val: \"Favorite\", selected: true}\n     * @event px-title-on-action-clicked  \n     */\n  });\n})();\n"]}